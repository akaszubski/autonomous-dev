{
  "description": "Strict Mode Configuration - Vibe coding with strict enforcement",
  "customInstructions": "STRICT MODE ACTIVE: When user requests a feature using natural language (e.g., 'implement X', 'add Y', 'create Z'), you MUST automatically invoke the /auto-implement command with their request. Do not just respond conversationally - actually run the command. Example: User says 'add Redis caching' → You run: /auto-implement 'add Redis caching'. This ensures orchestrator validates PROJECT.md alignment before any work begins.",
  "permissions": {
    "allow": [
      "*"
    ],
    "deny": [
      "Read(~/.ssh/*)",
      "Read(~/.aws/*)",
      "Read(**/.env)",
      "Write(~/.ssh/*)",
      "Write(~/.aws/*)",
      "Write(/etc/*)",
      "Write(/usr/*)",
      "Write(/System/*)",
      "Bash(rm -rf /*)",
      "Bash(sudo *)"
    ],
    "ask": []
  },
  "hooks": {
    "UserPromptSubmit": [
      {
        "description": "Display PROJECT.md context reminder",
        "hooks": [
          {
            "type": "command",
            "command": "echo '⭐ STRICT MODE ENABLED\\n- PROJECT.md alignment REQUIRED before any feature work\\n- All SDLC steps enforced (Research → Plan → Test → Implement → Review → Security → Docs)\\n- Auto-orchestration active: \"implement X\" triggers full pipeline\\n- File organization enforced: src/, docs/, tests/, scripts/\\n'"
          }
        ]
      },
      {
        "description": "Auto-detect feature requests and invoke orchestrator",
        "hooks": [
          {
            "type": "command",
            "command": "python .claude/hooks/detect_feature_request.py && echo '[Auto-Orchestration] Invoking orchestrator for PROJECT.md validation...'"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Write",
        "description": "Auto-format on file write",
        "hooks": [
          {
            "type": "command",
            "command": "python .claude/hooks/auto_format.py"
          }
        ]
      },
      {
        "matcher": "Edit",
        "description": "Auto-format on file edit",
        "hooks": [
          {
            "type": "command",
            "command": "python .claude/hooks/auto_format.py"
          }
        ]
      }
    ],
    "PreCommit": [
      {
        "description": "Strict mode enforcement - 100% compliance required",
        "hooks": [
          {
            "type": "command",
            "command": "python .claude/hooks/validate_project_alignment.py || exit 1"
          },
          {
            "type": "command",
            "command": "python .claude/hooks/enforce_orchestrator.py || exit 1"
          },
          {
            "type": "command",
            "command": "python .claude/hooks/enforce_tdd.py || exit 1"
          },
          {
            "type": "command",
            "command": "python .claude/hooks/auto_fix_docs.py || exit 1"
          },
          {
            "type": "command",
            "command": "python .claude/hooks/auto_test.py || exit 1"
          },
          {
            "type": "command",
            "command": "python .claude/hooks/security_scan.py || exit 1"
          }
        ]
      }
    ],
    "SubagentStop": [
      {
        "description": "Log agent completion to session",
        "hooks": [
          {
            "type": "command",
            "command": "python scripts/session_tracker.py subagent 'Subagent completed task'"
          }
        ]
      }
    ]
  }
}
